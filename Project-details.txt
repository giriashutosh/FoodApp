Foody (Name of the application)

Components

Header
  -Logo
  -Nav Items
Body
  -Search
  -RestaurantContainer
   -RestaurantCard
Footer
  - CopyRight
  - Links
  - Address
  - Contact

Props are used to pass data dynamically. it is just an argument pass to a function.
Destructuring on the fly ({name, cuisine})
config driven UI - website driven by data. controlling UI using the data(config).
cloudinary is a CDN.
why we need keys in map in react.
Dont use index as Keys react official

Two kind of export and import one is default and one is named(const).
named used when we have to export multiple things or component or function or variables.

React do fast, efficient DOM manipulation because of virtual DOM.
React Hooks
Normal js utility function
important hooks useState() and useEffect().
whenever a state variable updates react rerender the component.

Reconcilation algo or React Fiber introduced in React16 it is a new way of finding the diff and updated the DOM.
virtual DOM is a representation of actual DOM structure.
virtual DOM is basically looks like an js object.

Diff algo- Find out the difference between updated virtual DOM and previous virtual DOM.

Done
1. code sliting in the Components
2. utils folder for static data like image and api.
3. filter logic.

Need to be Done
add useEffect

Monolith and Microservice Architecture
Monolith - for example all the API code, backend, DB connectivity, UI, Auth, sms all the code written in same project known as Monolith.
If we make any minor changes in the project in that case also need to compile the whole project and deploy.
Microservice - Different sevices for different job. all the services combined and make a whole project.
this is known as separation of concern and SRP.
All these services need to talk to each other.
can written multiple service in different languages.
All the services deployed on different port/server.
All the services has domain name corresponding to port or server whenever services need to interact with each other they call the URL.

Two ways to fetch the data from api.
1. As soon as page load we can make an api call then render it on the page.
2. As soon as the page load we will quickly render UI after this we make api call then re re-render with the new data.
2nd approach is better.